services:
  clouddataforge:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: clouddataforge-app
    ports:
      - "8000:8000"
    environment:
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/gcp_key.json
      - BIGQUERY_DATASET_ID=${BIGQUERY_DATASET_ID}
      - BIGQUERY_TABLE_ID=${BIGQUERY_TABLE_ID}
    volumes:
      # Mount credentials (make sure gcp_key.json exists in your project root)
      - ./gcp_key.json:/app/credentials/gcp_key.json:ro
      # Mount logs directory for persistence
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - clouddataforge-network

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: clouddataforge-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - clouddataforge
    restart: unless-stopped
    networks:
      - clouddataforge-network
    profiles:
      - production

networks:
  clouddataforge-network:
    driver: bridge

volumes:
  logs:
    driver: local
